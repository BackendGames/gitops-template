apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-toolkit-sync-waves
  namespace: argo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: k8s-toolkit-sync-waves
  namespace: argo
rules:
  - apiGroups:
      - "*"
    resources:
      - pods
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: k8s-toolkit-sync-waves
  namespace: argo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: k8s-toolkit-sync-waves
subjects:
  - kind: ServiceAccount
    name: k8s-toolkit-sync-waves
    namespace: argo
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '100'
  name: wait-sync-waves
  namespace: argo
spec:
  template:
    spec:
      containers:
      - name: wait
        image: public.ecr.aws/bitnami/kubectl:1.24
        command:
        - /bin/sh
        - -c
        - |
          while ! kubectl get pods -l job-name=wave-2-3 --namespace argo; do echo "waiting for wave-2-3 to be complete, sleeping 5 seconds"; sleep 5; done
      restartPolicy: OnFailure
      serviceAccountName: k8s-toolkit-sync-waves
